// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicesOfProducts.DataContext;

#nullable disable

namespace ServicesOfProducts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240616221753_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("ServicesOfProducts.Models.Category", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentCategoryGuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.HasIndex("ParentCategoryGuid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Order", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.HasIndex("UserGuid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Product", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CategoryGuid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.HasIndex("CategoryGuid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Transaction", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderGuid")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProductGuid")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.HasIndex("OrderGuid");

                    b.HasIndex("ProductGuid");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Category", b =>
                {
                    b.HasOne("ServicesOfProducts.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryGuid");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Order", b =>
                {
                    b.HasOne("ServicesOfProducts.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Product", b =>
                {
                    b.HasOne("ServicesOfProducts.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryGuid");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ServicesOfProducts.Models.Transaction", b =>
                {
                    b.HasOne("ServicesOfProducts.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServicesOfProducts.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
